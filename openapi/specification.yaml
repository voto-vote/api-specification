openapi: "3.0.0"
info:
  title: VOTO - VOTE ADVICE APPLICATION API
  description: |
    <h3>Defines a common interface for vote advice applications</h3>
    To secure the API, we use different roles within our system. The following table shows the permissions of each role for each entity.
    It does not reflect reality perfectly. Creator can obviously only create candidates for its own application etc, but the table should give you an idea of how the roles work.

      |             | Admin | Creator | TrustPerson | Candidate | Anonymous |
      |-------------|-------|---------|-------------|-----------|-----------|
      | Election    | CRUD  | R       | R           | R         | R         |
      | Candidate   | CRUD  | CRUD    | CRUD        | RU        | R         |
      | CandidateVotes   | CRUD  | CRUD    | CRUD        | RU        | R         |
      | Party       | CRUD  | CRUD    | RU          | R         | R         |
      | PartyVotes       | CRUD  | CRUD    | RU          | R         | R         |
      | Application | CRUD  | CRUD    | R           | R         | R         |
      | Theses      | CRUD  | CRUD    | R           | R         | R         |
      | Votings     | R     | CR      | CRU         | CRU       | CR        |
      | Trustperson | CRUD  | CRUD    | CRUD        | R         | -         |
      | Creator     | CRUD  | CRUD    | R           | R         | -         |
      | Admins      | CRUD  | R       | -           | -         | -         |
      | Users       | CRUD  | CR      | CR          | RUD       | -         |

      ***C* = Create<br>**
      ***R* = Read<br>**
      ***U* = Update<br>**
      ***D* = Delete<br>**

  version: 0.0.1
  contact:
    name: API Support
    url: https://voto.vote/
    email: help@voto.vote
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://{environment}.voto.vote/{version}
    description: "VOTO API Endpoint"
    variables:
      environment:
        default: api # Production server
        enum:
          - api # Production server
          - dev.api # Development server
      version:
        default: v1
        enum:
          - v1
          - v2
tags:
  - name: Election
    description: Objects related to elections
  - name: VAA
    description: Objects related to Vote advice applications#
  - name: VAA/Roles
    description: Creators/TrustPersons related to Vote advice applications
  - name: VAA/Matches
    description: Candidates/Parties and all of their subpaths related to Vote advice applications
  - name: API
    description: About this API
  - name: Vote
    description: Endpoints for everything vote related
  - name: Roles
    description: Management endpoints for roles within the VOTO platform. Please note, that candidates are handled in /elections endpoints as they are the only entity which is directly related to a match, whereas a party can have multiple TrustPersons

components:
  securitySchemes:
    firebase:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        We currently use Firebase as Authentication Provider. In order to use parts of the API, you have to have a valid account and role. Retrieve this idToken here https://firebase.google.com/docs/reference/rest/auth#section-sign-in-email-password

x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true

x-amazon-apigateway-request-validator: all

paths:
  /:
    get:
      tags:
        - API
      summary: Get info about this API
      operationId: getAPIInfo
      parameters:
        - name: version
          in: query
          description: Version of API
          schema:
            type: string
            example: "v1"
      responses:
        "200":
          description: |-
            200 response
        "400":
          description: |-
            400 response - Malformed request
  /elections:
    get:
      tags:
        - Election
      summary: Fetches array of Elections
      description: |
        Fetching elections is allowed for the `creator` and `admin` role.
      operationId: getElections
      security:
        - firebase: []
      parameters:
        - name: election_date
          in: query
          description: Election date of election
          schema:
            type: string
            format: date
            example: "2021-10-01"
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Election.yaml#/Election"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - Election
      summary: Create Election object
      description: |
        Creating elections is allowed for the `admin` role.
      operationId: creatElection
      security:
        - firebase: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: "schemas/Election.yaml#/NewElection"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Election.yaml#/Election"
          links:
            GetElectionById:
              operationId: getElection
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **electionId** parameter in `GET /elections/{electionId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
  /elections/{electionId}:
    get:
      tags:
        - Election
      summary: Get single Election
      description: |
        Fetching one single election by its ID is allowed for everyone.
      operationId: getElection
      parameters:
        - in: path
          name: electionId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the election to get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Election.yaml#/Election"
          links:
            GetElectionById:
              operationId: getElection
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **electionId** parameter in `GET /elections/{electionId}`.
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - Election
      summary: Update Election object
      description: |
        Updating one single election by its ID is allowed for the `admin` role.
      operationId: putElection
      security:
        - firebase: []
      parameters:
        - in: path
          name: electionId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the election to put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Election.yaml#/NewElection"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Election.yaml#/Election"
          links:
            GetElectionById:
              operationId: getElection
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **electionId** parameter in `GET /elections/{electionId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - Election
      summary: Delete Election object
      description: |
        Deleting one single election by its ID is allowed for the `admin` role.
      operationId: deleteElection
      security:
        - firebase: []
      parameters:
        - in: path
          name: electionId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the election to delete
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications:
    get:
      tags:
        - VAA
      summary: Fetches array of VAA's
      operationId: getApplications
      description: |
        Fetching applications is allowed for `admin`
      security:
        - firebase: []
      parameters:
        - name: launch_date
          in: query
          description: Launch date of VAA
          schema:
            type: string
            format: date
            example: "2021-10-01"
        - name: sundown_date
          in: query
          description: Sundown date of VAA
          schema:
            type: string
            format: date
            example: "2021-10-01"
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Application.yaml#/Application"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA
      summary: Create VAA object
      operationId: createApplication
      description: |
        Creating applications is allowed for `admin`
      security:
        - firebase: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Application.yaml#/NewApplication"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Application.yaml#/Application"
          links:
            GetApplicationById:
              operationId: getApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **applicationId** parameter in `GET /applications/{applicationId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /clusters:
    get:
      tags:
        - VAA
      summary: Fetches array of clusters
      operationId: getClusters
      description: |
        Fetching clusters is allowed for `admin`
      security:
        - firebase: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Cluster.yaml#/Cluster"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA
      summary: Create Cluster object
      operationId: createCluster
      description: |
        Creating clusters is allowed for `admin`
      security:
        - firebase: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Cluster.yaml#/NewCluster"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Cluster.yaml#/Cluster"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /clusters/{clusterId}:
    get:
      tags:
        - VAA
      summary: Fetches single cluster
      description: |
        Fetching one cluster is allowed for everyone
      operationId: getCluster
      parameters:
        - in: path
          name: clusterId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the Cluster
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Cluster.yaml#/Cluster"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA
      summary: Update Cluster object
      description: |
        Updating one cluster is allowed for `admin` and `creator` (for its own applications)
      operationId: putCluster
      security:
        - firebase: []
      parameters:
        - in: path
          name: clusterId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the Cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Cluster.yaml#/NewCluster"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Cluster.yaml#/Cluster"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /themes:
    get:
      tags:
        - VAA
      summary: Fetches array of themes.
      operationId: getThemes
      description: |
        Fetching themes is allowed for `admin` and `creators`
      security:
        - firebase: []
      parameters:
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Theme.yaml#/Theme"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA
      summary: Create theme object
      operationId: createTheme
      description: |
        Creating themes is allowed for `admin` and `creators`
      security:
        - firebase: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Theme.yaml#/NewTheme"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Theme.yaml#/Theme"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /themes/{themeId}:
    get:
      tags:
        - VAA
      summary: Fetches single theme
      description: |
        Fetching one theme is allowed for everyone
      operationId: getTheme
      parameters:
        - in: path
          name: themeId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the theme
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Theme.yaml#/Theme"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA
      summary: Update theme object
      description: |
        Updating one theme is allowed for `admin` and `creator` (for its own applications)
      operationId: putTheme
      security:
        - firebase: []
      parameters:
        - in: path
          name: themeId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Theme.yaml#/Theme"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Theme.yaml#/Theme"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA
      summary: Delete theme object
      description: |
        Deleting one theme is allowed for `admin` and `creator` (for its own applications)
      operationId: deleteTheme
      security:
        - firebase: []
      parameters:
        - in: path
          name: themeId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the theme
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}:
    get:
      tags:
        - VAA
      summary: Fetches single VAA
      description: |
        Fetching one application is allowed for everyone
      operationId: getApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Application.yaml#/Application"
          links:
            GetApplicationById:
              operationId: getApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **applicationId** parameter in `GET /applications/{applicationId}`.
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA
      summary: Update VAA object
      description: |
        Updating one application is allowed for `admin` and `creator` (for its own applications)
      operationId: putApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Application.yaml#/NewApplication"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Application.yaml#/Application"
          links:
            GetApplicationById:
              operationId: getApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **applicationId** parameter in `GET /applications/{applicationId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA
      summary: Delete VAA object
      description: |
        Deleting one application is allowed for `admin` and `creator` (for its own applications)
      operationId: deleteApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/theses/{language}:
    get:
      tags:
        - VAA
      summary: Fetches all theses for one VAA in specific language
      description: |
        Fetching one applications theses is allowed for everyone
      operationId: getThesesForApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: language
          required: true
          schema:
            type: string
          description: Language code
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                items:
                  type: object
                  $ref: "schemas/These.yaml#/These"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA
      summary: Add these
      description: |
        Adding application theses is allowed for `admin` and `creator` (for its own applications)
      operationId: createTheseForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: language
          required: true
          schema:
            type: string
            format: text
          description: Language code
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/These.yaml#/NewLanguageThese"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/These.yaml#/LanguageThese"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/theses/{language}/{theseId}:
    get:
      tags:
        - VAA
      summary: Fetches one these for one VAA in specific language
      description: |
        Fetching one applications theses is allowed for everyone
      operationId: putSingleTheseForApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: language
          required: true
          schema:
            type: string
            format: text
          description: Language code
        - in: path
          name: theseId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the these
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                items:
                  type: object
                  $ref: "schemas/These.yaml#/These"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA
      summary: Update language these for application
      description: |
        Changing application theses is allowed for `admin` and `creator` (for its own applications)
      operationId: putThesesForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: language
          required: true
          schema:
            type: string
            format: text
          description: Language code
        - in: path
          name: theseId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the these
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/These.yaml#/NewLanguageThese"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/These.yaml#/LanguageThese"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA
      summary: Delete application these
      description: |
        Deleting application theses is allowed for `admin` and `creator` (for its own applications)
      operationId: deleteThesesForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: language
          required: true
          schema:
            type: string
            format: text
          description: Language code
        - in: path
          name: theseId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the language these
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/votings:
    post:
      tags:
        - Vote
      summary: Submit a new voting for an VAA
      description: |
        Creation of votings is allowed for everyone. Please note, that we still prevent CORS requests.
      operationId: createVotingForApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Voting.yaml#/NewVoting"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Voting.yaml#/Voting"
          links:
            GetVoteById:
              operationId: getVotingForApplication
              parameters:
                voteId: "$response.body#/id"
                applicationId: "$response.body#/application_id"
              description: >
                The `id` value returned in the response can be used as
                the **voteId** parameter in `GET /applications/{applicationId}/votings/{voteId}`.


                The `application_id` value returned in the response can be used as
                the **applicationId** parameter in `GET /applications/{applicationId}/votings/{voteId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/votings/{voteId}:
    get:
      tags:
        - Vote
      summary: Get existing vote
      description: |
        Fetching votings is allowed for everyone.
      operationId: getVotingForApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: voteId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the vote
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Voting.yaml#/Voting"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /admins:
    get:
      tags:
        - Roles
      summary: Get admins
      description: |
        Fetching admins is allowed for admins
      operationId: getAdmins
      security:
        - firebase: []
      parameters:
        - in: query
          name: limit
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/Admin"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - Roles
      summary: Create new admin
      description: |
        Creation of admins is allowed for admins
      operationId: createAdmin
      security:
        - firebase: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewAdmin"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/Admin"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /admins/{adminId}:
    get:
      tags:
        - Roles
      summary: Get Admin by ID
      description: |
        Fetching admins is allowed for admins
      operationId: getAdminById
      security:
        - firebase: []
      parameters:
        - in: path
          name: adminId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the admin
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/Admin"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - Roles
      summary: Remove admin
      description: |
        Remove admin is allowed for admin
      operationId: deleteAdmin
      security:
        - firebase: []
      parameters:
        - in: path
          name: adminId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the admin
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /users:
    post:
      tags:
        - Roles
      summary: Create new user
      description: |
        Creation of users is allowed for admins, creators, and trustpersons
      operationId: createUser
      security:
        - firebase: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewUser"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/User"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /users/{userId}:
    get:
      tags:
        - Roles
      summary: Get User by ID
      description: |
        Fetching users is allowed for admins
      operationId: getUserById
      security:
        - firebase: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the user
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - Roles
      summary: Update user
      description: |
        Updating user is allowed for admins and the user itself.
      operationId: updateUser
      security:
        - firebase: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewUser"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/User"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - Roles
      summary: Remove user
      description: |
        Remove user is allowed for admin
      operationId: deleteUser
      security:
        - firebase: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the user
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/roles/creator:
    get:
      tags:
        - VAA/Roles
      summary: Get creator for VAA
      description: |
        Fetching creator is allowed for admins and creator.
      operationId: getCreatorForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/Creator"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA/Roles
      summary: Create new creator for VAA
      description: |
        Creation of creator is allowed for admins and creator.
      operationId: createCreatorForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewCreator"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/Creator"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/roles/creator/{creatorId}:
    get:
      tags:
        - VAA/Roles
      summary: Get creator by ID for VAA
      description: |
        Fetching creator is allowed for admins and creator.
      operationId: getCreatorForApplicationById
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: creatorId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the creator
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/Creator"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA/Roles
      summary: Remove creator for VAA
      description: |
        Remove creator is allowed for admins and creator (for its own application).
      operationId: deleteCreatorForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: creatorId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the creator
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/roles/trustpersons:
    get:
      tags:
        - VAA/Roles
      summary: Get trustpersons for VAA
      description: |
        Fetching trustpersons is allowed for admins and creator as well as for trustpersons for their own party.
      operationId: getTrustPersonsForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: query
          name: partyId
          required: false
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/TrustPerson"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA/Roles
      summary: Create new trustperson for VAA
      description: |
        Creation of trustperson is allowed for admins and creator as well as for trustpersons for their own party.
      operationId: createTrustPersonForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewTrustPerson"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/TrustPerson"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/roles/trustpersons/{trustpersonId}:
    get:
      tags:
        - VAA/Roles
      summary: Get trustperson by ID for VAA
      description: |
        Fetching trustperson by id is allowed for admins and creator.
      operationId: getTrustpersonForApplicationById
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: trustpersonId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the trustperson
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/TrustPerson"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA/Roles
      summary: Update trustperson for VAA
      description: |
        Updating trustpersons is allowed for admins and creator as well as for trustpersons ( for their own party )
      operationId: updateTrustPersonForApplicationById
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: trustpersonId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the trustperson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/TrustPerson"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/TrustPerson"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA/Roles
      summary: Remove TrustPerson for VAA
      description: |
        Remove TrustPerson is allowed for admins and creator (for its own application) and for trustpersons ( for its own party ).
      operationId: deleteTrustPersonForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: trustpersonId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the trustperson
      responses:
        "204":
          description: No content
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/matches/candidates:
    get:
      tags:
        - VAA/Matches
      summary: Get candidates for VAA
      operationId: getCandidatesForApplication
      description: |
        Fetching candidates for one single application by its ID is allowed for everyone.
      parameters:
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/Candidate"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA/Matches
      summary: Create new candidate for application
      description: |
        Creation of candidates is allowed for `admin`, `creator` (only in his application) and `trustperson` (only for his party)
      operationId: createCandidatesForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to get
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewCandidate"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/Candidate"
          links:
            GetCandidateById:
              operationId: getCandidateForApplication
              parameters:
                candidateId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **candidateId** parameter in `GET /applications/{applicationId}/candidates/{candidateId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/matches/candidates/{candidateId}:
    get:
      tags:
        - VAA/Matches
      summary: Get single candidate
      description: |
        Fetching a candidate for one application is allowed for everyone.
      operationId: getCandidateForApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to get
        - in: path
          name: candidateId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the candidate to get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/Candidate"
          links:
            GetCandidateById:
              operationId: getCandidateForApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **candidateId** parameter in `GET /applications/{applicationId}/candidates/{candidateId}`.
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA/Matches
      summary: Change candidate for application
      description: |
        Changing a candidate for one application is allowed for `admin`, `creator` (within his application), `trustperson` (within his party) and one `candidate` for itself.
      operationId: putCandidateForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to put
        - in: path
          name: candidateId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the candidate to put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewCandidate"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/Candidate"
          links:
            GetCandidateById:
              operationId: getCandidateForApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **candidateId** parameter in `GET /applications/{applicationId}/candidates/{candidateId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA/Matches
      summary: Delete candidate object
      description: |
        Deleting a candidate for one application is allowed for `admin`, `creator` (within his application), `trustperson` (within his party) and one `candidate` for itself.
      operationId: deleteCandidateForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the election
        - in: path
          name: candidateId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the candidate to delete
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
  /applications/{applicationId}/matches/candidates/{candidateId}/votes:
    get:
      tags:
        - VAA/Matches
      summary: Get votes of a candidate
      description: |
        Fetching a candidates votes for one application is allowed for everyone.
      operationId: getVotingsForCandidate
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to get
        - in: path
          name: candidateId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the candidate to get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Voting.yaml#/CandidateVote"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA/Matches
      summary: Change candidate votes for application
      description: |
        Changing a candidates votes for one application is allowed for `admin` and one `candidate` for itself.
      operationId: putCandidateVotes
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to put
        - in: path
          name: candidateId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the candidate to put
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                votes:
                  type: array
                  items:
                    $ref: "schemas/Voting.yaml#/CandidateVote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    items:
                      $ref: "schemas/Voting.yaml#/CandidateVote"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
  /applications/{applicationId}/matches/parties:
    get:
      tags:
        - VAA/Matches
      summary: Get parties for application
      operationId: getPartiesForApplication
      description: |
        Fetching parties for one application is allowed for everyone.
      parameters:
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Party.yaml#/Party"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA/Matches
      summary: Create new party for application
      description: |
        Creating parties for one application is allowed for `admin` and `creator` (for its own application)
      operationId: createPartyForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Party.yaml#/NewParty"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Party.yaml#/Party"
          links:
            GetPartyById:
              operationId: getPartyForApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **partyId** parameter in `GET /applications/{applicationId}/parties/{partyId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/matches/parties/{partyId}:
    get:
      tags:
        - VAA/Matches
      summary: Get single party
      description: |
        Fetching one party for one application by its ID is allowed for everyone.
      operationId: getPartyForApplication
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Party.yaml#/Party"
          links:
            GetPartyById:
              operationId: getPartyForApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **partyId** parameter in `GET /applications/{applicationId}/parties/{partyId}`.
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA/Matches
      summary: Change party for application
      description: |
        Changing a party for one application is allowed for `admin`, `creator` and the `trustperson` for its own party.
      operationId: putPartyForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Party.yaml#/Party"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Party.yaml#/Party"
          links:
            GetPartyById:
              operationId: getPartyForApplication
              parameters:
                electionId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the **partyId** parameter in `GET /applications/{applicationId}/parties/{partyId}`.
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

    delete:
      tags:
        - VAA/Matches
      summary: Delete party object
      description: |
        Deleting a party for one application is allowed for `admin`, `creator` and `trustperson` for its own party.
      operationId: deletePartyForApplication
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/matches/parties/{partyId}/trustpersons:
    get:
      tags:
        - VAA/Matches
      summary: Get trustpersons for party in VAA
      description: |
        Fetching trustpersons for a party is allowed for admins and creator as well as for trustpersons for their own party.
      operationId: getTrustPersonsForApplicationAndParty
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: query
          name: partyId
          required: false
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
        - name: limit
          in: query
          description: Limits the amount of items in the responsing array. Max results is 50.
          schema:
            type: integer
            example: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Roles.yaml#/TrustPerson"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    post:
      tags:
        - VAA/Matches
      summary: Create new trustperson for VAA for specific party
      description: |
        Creation of trustperson is allowed for admins and creator as well as for trustpersons for their own party.
      operationId: createTrustPersonForApplicationAndParty
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/NewTrustPerson"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/TrustPerson"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/matches/parties/{partyId}/trustpersons/{trustpersonId}:
    get:
      tags:
        - VAA/Matches
      summary: Get trustperson by ID for VAA and party
      description: |
        Fetching trustperson by id is allowed for admins and creator as well as for trustpersons of partyId
      operationId: getTrustpersonForApplicationByPartyAndId
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
        - in: path
          name: trustpersonId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the trustperson
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/TrustPerson"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA/Matches
      summary: Update trustperson for VAA and party
      description: |
        Updating trustpersons is allowed for admins and creator as well as for trustpersons ( for their own party )
      operationId: updateTrustPersonForApplicationByPartyAndId
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
        - in: path
          name: trustpersonId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the trustperson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Roles.yaml#/TrustPerson"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "schemas/Roles.yaml#/TrustPerson"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    delete:
      tags:
        - VAA/Matches
      summary: Remove TrustPerson for VAA and party
      description: |
        Remove TrustPerson is allowed for admins and creator (for its own application) and for trustpersons ( for its own party ).
      operationId: deleteTrustPersonForApplicationAndParty
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the VAA
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party
        - in: path
          name: trustpersonId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the trustperson
      responses:
        "204":
          description: No content
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"

  /applications/{applicationId}/matches/parties/{partyId}/votes:
    get:
      tags:
        - VAA/Matches
      summary: Get votes of a party
      description: |
        Fetching votes for one specific party is allowed for everyone.
      operationId: getVotingsForParty
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to get
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the party to get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "schemas/Voting.yaml#/PartyVote"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
    put:
      tags:
        - VAA/Matches
      summary: Change party votes for application
      description: |
        Changing votes for one specific party is only allowed for `trustperson` (for its own party)
      operationId: putPartyVotes
      security:
        - firebase: []
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the application to put
        - in: path
          name: partyId
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the partyId to put
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                votes:
                  type: array
                  items:
                    $ref: "schemas/Voting.yaml#/PartyVote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    items:
                      $ref: "schemas/Voting.yaml#/PartyVote"
        "400":
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "schemas/Error.yaml#/Error"
